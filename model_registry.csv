type_of_model,mode,regression_formula,grid_size,notes,model_performance,performance_measure
random_forest,regression,~win_byARPI + ABPI + BRPI + BBPI,5,first model attempts2,12.05474789,rmse
random_forest,classification,~winARPI + ABPI + BRPI + BBPI,5,first classification,0.685805806,accuracy
random_forest,classification,~winARPI + ABPI + BRPI + BBPI,10,second model attempts,0.685805806,accuracy
random_forest,classification,~winARPI + ABPI + BRPI + BBPI,1,second model attempts,0.744299265,kaggle
random_forest,classification,~winARPI + ABPI + BRPI + BBPI,1,second model attempts test,0.744299265,kaggle
random_forest,classification,~winARPI + ABPI + BRPI + BBPI,1,second model attempts test2,0.744299265,kaggle
random_forest,classification,~winA_rank_avg + B_rank_avg + ATM_OOE + BTM_OOE + ATM_ODE + BTM_ODE,5,first attempt with Jims data,0.562677192,kaggle
random_forest,classification,~winA_rank_avg + B_rank_avg + ATM_OOE + BTM_OOE + ATM_ODE + BTM_ODE + ARPI + BRPI,5,first attempt with Jims data,0.591771219,kaggle
random_forest,classification,~winARPI + ABPI + BRPI + BBPI,10,second model attempts test,0.342029097,kaggle
random_forest,classification,~winA_rank_avg + B_rank_avg + ATM_OOE + BTM_OOE + ATM_ODE + BTM_ODE,5,first attempt with Jims data submission to kaggle test,0.562677192,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + OE_A + OE_B + avg_win_A + avg_win_B,5,testing new model building workflow,0.54706926,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + OE_A + OE_B + avg_win_A + avg_win_B + clust_A + clust_B,5,testing new model building workflow,0.550078675,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + OE_A + OE_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + clust_A + clust_B,5,testing new model building workflow,0.551468673,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + OE_A + OE_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + clust_A + clust_B,5,testing new model building workflow 2,0.548312481,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + OE_A + OE_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + clust_A + clust_B,5,testing new model building workflow 3,0.548312481,kaggle
random_forest,regression,~win_byrank_avg_A + rank_avg_B + OE_A + OE_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + clust_A + clust_B,5,testing to see if regression works,11.56227664,rmse
random_forest,regression,~win_byrank_avg_A + rank_avg_B + OE_A + OE_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + clust_A + clust_B,5,testing to see if regression works 2,11.56227664,rmse
random_forest,classification,~win.,5,use it all,0.565604231,kaggle
random_forest,classification,~win.,5,use it all 2,0.565604231,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + OE_A + OE_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + clust_A + clust_B,5,old one,0.548312481,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + OE_A + OE_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + clust_A + clust_B,5,"classification of OE, DE, rank, Win spread, and cluster",0.551468673,kaggle
random_forest,classification,~wincol_A + col_B + OE_A + OE_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + clust_A + clust_B,5,"classification of OE, DE, col rank, Win spread, and cluster",0.566355456,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + clust_A + clust_B,5,"classification of OE, DE, avg and sd rank, Win spread, and cluster",0.544163403,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + last3possessions_per_game_A + last3possessions_per_game_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + clust_A + clust_B,5,"classification of OE, DE, avg and sd rank, Win spread, possessions, and cluster",0.541435849,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + overallpossessions_per_game_A + overallpossessions_per_game_B + last3possessions_per_game_A + last3possessions_per_game_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + clust_A + clust_B,5,"classification of OE, DE, avg and sd rank, Win spread, possessions, and cluster",0.558636956,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + last3possessions_per_game_A + last3possessions_per_game_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + clust_A + clust_B + overallfree_throw_rate_A + overallfree_throw_rate_B,5,"classification of OE, DE, avg and sd rank, Win spread, possessions, and cluster",0.538027019,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + last3possessions_per_game_A + last3possessions_per_game_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + clust_A + clust_B + overallfree_throw_rate_A + overallfree_throw_rate_B + overallpercent_of_points_from_3_pointers_A + overallpercent_of_points_from_3_pointers_B,5,"classification of OE, DE, avg and sd rank, Win spread, possessions, free throws, 3 points, and cluster",0.550956237,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + last3possessions_per_game_A + last3possessions_per_game_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + clust_A + clust_B + overallpercent_of_points_from_3_pointers_A + overallpercent_of_points_from_3_pointers_B,5,"classification of OE, DE, avg and sd rank, Win spread, possessions, free throws, 3 points, and cluster",0.552164923,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + last3possessions_per_game_A + last3possessions_per_game_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + clust_A + clust_B + overallfree_throw_rate_A + overallfree_throw_rate_B + overallpercent_of_points_from_3_pointers_A + overallpercent_of_points_from_3_pointers_B + last3_change_A + last3_change_B,5,"classification of OE, DE, avg and sd rank, Win spread, possessions, free throws, 3 points, and cluster",0.5634343,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + last3possessions_per_game_A + last3possessions_per_game_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + clust_A + clust_B + overallfree_throw_rate_A + overallfree_throw_rate_B + last3_change_A + last3_change_B,5,"classification of OE, DE, avg and sd rank, Win spread, possessions, free throws, 3 points, and cluster",0.543207511,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + last3possessions_per_game_A + last3possessions_per_game_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + clust_A + clust_B + overallfree_throw_rate_A + overallfree_throw_rate_B,5,"classification of OE, DE, avg and sd rank, Win spread, possessions, free throws, 3 points, and cluster",0.538027019,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + last3possessions_per_game_A + last3possessions_per_game_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + clust_A + clust_B + overallfree_throw_rate_A + overallfree_throw_rate_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B,5,"classification of OE, DE, avg and sd rank, Win spread, possessions, free throws, strength of schedule, and cluster",0.538968445,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + last3possessions_per_game_A + last3possessions_per_game_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + clust_A + clust_B + overallfree_throw_rate_A + overallfree_throw_rate_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + ratingneutral_by_other_A + ratingneutral_by_other_B,5,"classification of OE, DE, avg and sd rank, Win spread, possessions, free throws, strength of schedule, and cluster",0.543528704,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + last3possessions_per_game_A + last3possessions_per_game_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + clust_A + clust_B + overallfree_throw_rate_A + overallfree_throw_rate_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + ratinglast_10_games_by_other_A + ratinglast_10_games_by_other_B,5,"classification of OE, DE, avg and sd rank, Win spread, possessions, free throws, strength of schedule, last 10, and cluster",0.544912756,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + DE_A + DE_B + last3possessions_per_game_A + last3possessions_per_game_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + clust_A + clust_B + overallfree_throw_rate_A + overallfree_throw_rate_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B,5,"classification of OE, DE, avg and sd rank, Win spread, possessions, free throws, strength of schedule, and cluster",0.54084972,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + DE_A + DE_B + last3possessions_per_game_A + last3possessions_per_game_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_by_A + avg_win_by_B + clust_A + clust_B + overallfree_throw_rate_A + overallfree_throw_rate_B,5,"classification of OE, DE, avg and sd rank, Win spread, possessions, free throws, strength of schedule, and cluster",0.540918025,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + DE_A + DE_B + last3possessions_per_game_A + last3possessions_per_game_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + overallfree_throw_rate_A + overallfree_throw_rate_B,5,"classification of OE, DE, avg and sd rank, Win spread, possessions, free throws, strength of schedule, and cluster",0.538856221,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + last3possessions_per_game_A + last3possessions_per_game_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + overallfree_throw_rate_A + overallfree_throw_rate_B,5,"classification of OE, DE, avg and sd rank, possessions, free throws, strength of schedule, and cluster",0.53883158,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + last3possessions_per_game_A + last3possessions_per_game_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_by_A + avg_win_by_B + overallfree_throw_rate_A + overallfree_throw_rate_B,5,"classification of OE, DE, avg and sd rank, possessions, free throws, strength of schedule, and cluster",0.5411932,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + last3possessions_per_game_A + last3possessions_per_game_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B,5,"classification of OE, DE, avg and sd rank, possessions, free throws, strength of schedule, and cluster",0.538652719,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster",0.541864518,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster",0.543088808,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster",0.538896564,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + OE_A + OE_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster",0.558863467,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster",0.537006308,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster",0.572052345,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster",0.538405001,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster",0.55144048,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster",0.53571581,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster test",0.53812242,kaggle
random_forest,regression,~win_byrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster",11.45672952,rmse
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B,50,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster larger grid",0.559576517,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B,50,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster tune more grid",0.53936072,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster 5 grid and 3 to tune",0.538981181,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + rank_sd_A + rank_sd_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster, and dr recomendations",0.537982605,kaggle
random_forest,classification,~winrpi_A + bpi_A + bpi_B + bpi_A,5,saw this one in the notes,0.666517721,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster, and dr recomendations",0.538535956,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster, and dr recomendations unbreaking",0.538535956,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster, and dr recomendations unbreakin",0.539107157,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster, and dr recomendations and good wins",0.538481171,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster, and dr recomendations and good wins and conf",0.538481171,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins + conf_loss,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster, and dr recomendations and good wins and conf",0.534198446,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins + conf_loss,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster, and dr recomendations and good wins and conf with interaction",0.534198446,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins + conf_loss,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster, and dr recomendations and good wins and conf with interactions",0.532301203,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins + conf_loss,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster, 
                               and dr recomendations and good wins and conf - goodwins/badwins interaction",0.536156383,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins + conf_loss,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster, 
                               and dr recomendations and good wins and conf - goodwins/badwins interaction alt",0.536156383,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster, 
                               and dr recomendations and good wins and conf - goodwins/badwins interaction alt",0.534209675,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A + MOR_A + MOR_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster, 
                               and dr recomendations and good wins and conf - goodwins/badwins interaction, updated rankings",0.556111451,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A + MOR_A + MOR_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster, 
                               and dr recomendations and good wins and conf - goodwins/badwins interaction, updated rankings interact",0.553944937,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A + MOR_A + MOR_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster, 
                               and dr recomendations and good wins and conf - goodwins/badwins without interaction, updated rankings interact",0.559023859620021,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + MOR_A + MOR_B,5,"classification of OE, avg and sd rank, possessions, last 3 oe/de, free throws, avg_win_spread, and cluster, 
                               and dr recomendations and good wins and conf - goodwins/badwins without interaction, updated rankings interact",0.5575832794244183,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + MOR_A + MOR_B,5,tyring to re-find best model,0.5549873233564281,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A,5,tyring to re-find best model,0.534209674983299,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A + MOR_A + MOR_B,5,current best model with MORA and MORB,0.5561114512161711,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A + POM_A + POM_B,5,current best model with MORA and MORB,0.5417017382157937,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A + POM_A + POM_B,5,current best model with POMA and POMB interaction,0.5454529786010979,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A + SAG_A + SAG_B,5,current best model with SAG_A + SAG_B,0.5484878707848979,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A + SAG_A + SAG_B,5,current best model with SAG_A + SAG_B interaction,0.5478324933394279,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A + WLK_A + WLK_B,5,current best model with WLK_A + WLK_B interaction,0.5609772238836066,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A,5,current best model,0.534209674983299,kaggle
log_reg,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A,5,current best model,0.550789132539668,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A,5,current best model make into regression,0.5341625171942355,kaggle
boost_tree,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A,20,current best model with boost tree grid 20,0.5352820929881282,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A,20,current best model with boost tree grid 20,0.538535320485796,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A,10,current best model with boost tree grid 20,0.5372679753950079,kaggle
boost_tree,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A,10,current best model with boost tree grid 20,0.5352820929881282,kaggle
boost_tree,regression,~win_byrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A,10,current best model with boost tree grid 20,11.566338641232262,rmse
boost_tree,regression,~win_byrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A + Seed_A + Seed_B,10,current best model with boost tree grid 20 now add seeds,11.57671271841975,rmse
boost_tree,regression,~win_byrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A + Seed_A + Seed_B,10,current best model with boost tree grid 20 now add seeds interaction,11.575253344818375,rmse
boost_tree,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A + Seed_A + Seed_B,10,current best model with boost tree grid 20 now add seeds interaction,0.5540997409040637,kaggle
boost_tree,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A,10,current best model with boost tree grid 20 now add seeds interaction,0.6931453798465647,kaggle
boost_tree,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A,10,current best model with boost tree grid 20 now add seeds,0.5565958368859651,kaggle
boost_tree,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A,10,current best model with boost tree grid 20 now add seeds - fix interactions,0.5565958368859651,kaggle
boost_tree,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A,10,current best model with boost tree grid 20 now add seeds - put interactions back in,0.5554625726222228,kaggle
boost_tree,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A + Seed_A + Seed_B,10,current best model with boost tree grid 20 now add seeds - put interactions back in,0.5700869780762423,kaggle
boost_tree,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A + Seed_A + Seed_B,10,current best model with boost tree grid 20 now add seeds - put interactions back in - seeds,0.5540997409040637,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A + Seed_A + Seed_B,10,current best model with boost tree grid 20 now add seeds - put interactions back in - seeds,0.5318552266881815,kaggle
log_reg,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A + Seed_A + Seed_B,10,current best model with boost tree grid 20 now add seeds - put interactions back in - seeds,0.5365399060862428,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A + Seed_A + Seed_B + five38_A + five38_B,10,current best model with boost tree grid 20 now add seeds - put interactions back in - seeds 538add,0.5318552266881815,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A + Seed_A + Seed_B + five38_A + five38_B,10,current best model with boost tree grid 20 now add seeds - put interactions back in - seeds 538add interact,0.5318552266881815,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A + Seed_A + Seed_B + five38_A + five38_B,10,current best model with boost tree grid 20 now add seeds - put interactions back in - seeds 538add interact - impute differently,0.5322094296572099,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_B + conf_loss_against_B + conf_wins_against_A + conf_loss_against_A + Seed_A + Seed_B + five38_A + five38_B,10,current best model with boost tree grid 20 now add seeds - put interactions back in - seeds 538add interact - impute differently restart,0.5354239173901999,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_A + conf_loss_against_A + +conf_wins_against_B + conf_loss_against_B,10,current best model with boost tree grid 20 now add seeds - put interactions back in - seeds 538add interact - impute differently restart,0.5381656343746408,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_A + conf_loss_against_A + +conf_wins_against_B + conf_loss_against_B,10,current best model with random forest odd interactions,0.5381656343746408,kaggle
boost_tree,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_A + conf_loss_against_A + +conf_wins_against_B + conf_loss_against_B,10,current best model with random forest odd interactions,0.6931459745921955,kaggle
boost_tree,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_A + conf_loss_against_A + +conf_wins_against_B + conf_loss_against_B,20,current best model with random forest odd interactions,0.6922808359006559,kaggle
log_reg,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_A + conf_loss_against_A + +conf_wins_against_B + conf_loss_against_B,20,current best model with random forest odd interactions,0.5445887304081933,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + good_wins_A + good_wins_B + conf_wins_against_A + conf_loss_against_A + +conf_wins_against_B + conf_loss_against_B,20,current best model with random forest odd interactions,0.5381757636896809,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + +conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,10,current best model minus good win and loss plus quad stuff,0.534388046616145,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,10,current best model minus good win and loss plus quad stuff,0.3205049793884189,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,10,current best model minus good win and loss plus quad stuff 19,0.551677104296414,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,10,current best model predict on itsself,0.3205049793884189,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,10,current best model predict on itsself so Jim can see,0.16390238352975375,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,10,current best model validation,0.5351525492135498,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,10,current best model validation test,0.459929974819111,kaggle
random_forest,regression,~win_byrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,10,current best model validation test,7.5057320294688354,rmse
boost_tree,regression,~win_byrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,10,current best model validation test,4.996927667712707,rmse
boost_tree,regression,~win_byrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,100,current best model validation test,9.844305760093993,rmse
boost_tree,regression,~win_byrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,10,current best model validation regression,4.996927667712707,rmse
boost_tree,regression,~win_byrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,11,current best model validation regression,5.009498569085812,rmse
boost_tree,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,10,current best model validation classification,0.6766747951667721,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,10,current best model validation classification,0.459929974819111,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,100,current best model validation classification,0.40804798238053797,kaggle
boost_tree,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,100,current best model validation classification,0.693138656196869,kaggle
log_reg,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,10,current best model validation classification,0.5564367110638573,kaggle
log_reg,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,100,current best model validation classification,0.6274527269285276,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,1,current best model validation classification,0.2047152949786654,kaggle
random_forest,regression,~win_byrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,10,current best model validation regression,7.5057320294688354,rmse
random_forest,regression,~win_byrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,100,current best model validation regression,7.480105323566006,rmse
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,100,current best model adding off eff with quad wins interaction,0.23510499788970468,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + OE_A + OE_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,100,current best model adding off eff with quad wins interaction,0.2755678390523882,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,100,current best model adding off eff without quad wins interaction,0.22126019852318884,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,100,current best model adding off eff without quad wins interaction,0.26065554621663295,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,100,current best model adding off eff without quad wins interaction,0.28905588686025496,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,100,current best model adding off eff without quad wins interaction,0.23770912839489539,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,100,current best model adding off eff without quad wins interaction,0.2405112380853588,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,100,current best model adding off eff without quad wins interaction,0.202864253728927,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,100,current best model splitting test before 2018,0.544669503808599,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,100,current best model splitting test before 2018 with new interaction,0.5511298598410079,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,100,current best model splitting test before 2018 with new interactions,0.5528752774464482,kaggle
random_forest,classification,~winlast3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B,100,current best model splitting test before 2018 with new interactions,0.5977067295581124,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + OE_A + OE_B,100,current best model splitting test before 2018 with new interactions,0.5555232987677903,kaggle
random_forest,classification,~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B,100,current best model splitting test before 2018 with new interactions,0.5503645954482198,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B",100,current best model splitting test before 2018 with new interactions,0.5475489959365445,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + overallpercent_of_points_from_3_pointers_A + overallpercent_of_points_from_3_pointers_B",100,current best model splitting test before 2018 with new interactions,0.5585443384987754,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + last3_change_A + last3_change_B",100,current best model splitting test before 2018 with new interactions,0.580552796622273,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,current best model splitting test before 2018 with new interactions,0.5452969955658901,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B + OR_A + OR_B",100,current best model splitting test before 2018 with new interactions,0.5532310219762604,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B + five38_A + five38_B",100,current best model splitting test before 2018 with new interactions,0.5529260936967406,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_wins_A + quad_wins_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + 
    t3_week_rank_avg_A + t3_week_rank_avg_B",100,current best model splitting test before 2018 with new interactions,0.5452969955658901,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_loss_against_A + conf_wins_against_B + conf_loss_against_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + 
    t3_week_rank_avg_A + t3_week_rank_avg_B",100,current best model splitting test before 2018 with new interactions,0.5467705750155705,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + 
    t3_week_rank_avg_A + t3_week_rank_avg_B",100,current best model splitting test before 2018 with new interactions,0.5435671458789559,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + 
    t3_week_rank_avg_A + t3_week_rank_avg_B",100,current best model splitting test before 2018 with new interactions,0.5463861973204361,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,current best model splitting test before 2018 with new interactions,0.54521001775103,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,current best model splitting test before 2018 with new interactions,0.5567319655250104,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,current best model splitting test before 2018 without new interactions,0.54521001775103,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,current best model splitting test before 2018 without new interactions2,0.5359249031527431,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + 
    t3_week_rank_avg_A + t3_week_rank_avg_B",100,current best model splitting test before 2018 without new interactions2,0.5549216403027272,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + 
    t3_week_rank_avg_A + t3_week_rank_avg_B",100,current best model splitting test before 2018 without new interactions2,0.545394320620298,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + 
    t3_week_rank_avg_A + t3_week_rank_avg_B",100,current best model splitting test before 2018 without new interactions2,0.5383254611947175,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + t3_week_rank_avg_A + 
    t3_week_rank_avg_B",100,current best model splitting test before 2018 without new interactions2,0.5470946648258612,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + t3_week_rank_avg_A + 
    t3_week_rank_avg_B",100,current best model splitting test before 2018 without new interactions2,0.5474297053349793,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + t3_week_rank_avg_A + 
    t3_week_rank_avg_B",100,current best model splitting test before 2018 without new interactions2,0.5289504119627634,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + OE_A + OE_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + 
    t3_week_rank_avg_A + t3_week_rank_avg_B",100,current best model splitting test before 2018 without new interactions2,0.5534435795947099,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + DE_A + DE_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + 
    t3_week_rank_avg_A + t3_week_rank_avg_B",100,current best model splitting test before 2018 without new interactions2,0.5403948007857222,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + overallpercent_of_points_from_3_pointers_A + overallpercent_of_points_from_3_pointers_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + 
    Seed_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,current best model splitting test before 2018 without new interactions2,0.5909844917700372,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3_change_A + last3_change_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + 
    t3_week_rank_avg_A + t3_week_rank_avg_B",100,current best model splitting test before 2018 without new interactions2,0.5348950926072842,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + OR_A + OR_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + 
    t3_week_rank_avg_A + t3_week_rank_avg_B",100,current best model splitting test before 2018 without new interactions2,0.5378047866834723,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + t3_week_rank_avg_A + 
    t3_week_rank_avg_B",100,current best model splitting test before 2018 without interactions2,0.5334355285345103,kaggle
log_reg,classification,"~winrank_avg_A + rank_avg_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + t3_week_rank_avg_A + 
    t3_week_rank_avg_B",100,current best model splitting test before 2018 without interactions2,0.5415234592533453,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + t3_week_rank_avg_A + 
    t3_week_rank_avg_B",100,current best model splitting test before 2018 with interactions2,0.5289504119627634,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + t3_week_rank_avg_A + 
    t3_week_rank_avg_B",100,current best model splitting test before 2018 with different test train,0.5485789372183184,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,current best model splitting test before 2018 with different test train,0.5462566744407659,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,validating model for year 2004,0.544851900600351,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,validating model for year 2005,0.6155684637968556,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,validating model for year 2006,0.5861451717539826,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,validating model for year 2007,0.48315814520406114,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,validating model for year 2008,0.5083517468412133,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,validating model for year 2009,0.48266166045079145,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,validating model for year 2010,0.6624888276618288,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,validating model for year 2011,0.6760844643532009,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,validating model for year 2012,0.5762618321270562,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,validating model for year 2013,0.6328471017178704,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,validating model for year 2014,0.6705437783025644,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,validating model for year 2015,0.5621661433274935,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,validating model for year 2016,0.5261355028615529,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,validating model for year 2017,0.5315591662756997,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,validating model for year 2018,0.5980925113347586,kaggle
random_forest,classification,"~winrank_avg_A + rank_avg_B + last3offensive_efficiency_A + last3offensive_efficiency_B + last3possessions_per_game_A + last3possessions_per_game_B + last3defensive_efficiency_A + last3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + 
    ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B",100,validating model for year 2019,0.5004249389017309,kaggle
random_forest,classification,~winlast3defensive_efficiency_B + clust_A + clust_B + avg_win_A + avg_win_B + overallfree_throw_rate_A + overallfree_throw_rate_B + col_A + col_B + conf_wins_against_A + conf_wins_against_B + conf_loss_against_A + conf_loss_against_B + quad_wins_A + quad_wins_B + quad_loss_A + quad_loss_B + Seed_A + Seed_B + ratingschedule_strength_by_other_A + ratingschedule_strength_by_other_B + t3_week_rank_avg_A + t3_week_rank_avg_B,100,building final model,0.5424832923631958,kaggle
